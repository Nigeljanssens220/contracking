"use client";

import { Button } from "@/components/ui/button";
import { downloadTextFile } from "@/lib/download-utils";
import { Copy, Download } from "lucide-react";

export function DownloadTemplatesButtons() {
  const generateEmergencyContactTemplate = () => {
    const template = `LABOR EMERGENCY CONTACTS
=======================

Healthcare Provider
Name: _________________________
Main Phone: ___________________
Emergency Line: _______________
After Hours: __________________

Hospital/Birth Center
Name: _________________________
Address: ______________________
Labor & Delivery: _____________
Main Number: __________________
Parking Info: _________________

Emergency Contacts
Partner: ______________________
Phone: _______________________
Backup Contact: _______________
Phone: _______________________

Childcare Emergency
Primary: ______________________
Phone: _______________________
Backup: ______________________
Phone: _______________________

Medical Information
Blood Type: ___________________
Allergies: ____________________
Medical Conditions: ___________
Current Medications: __________
Due Date: ____________________

Quick Reference Scripts
======================

Calling Healthcare Provider:
"Hi, this is [YOUR NAME]. I'm [WEEKS] weeks pregnant and I think I'm in labor. My contractions are [FREQUENCY] apart, lasting [DURATION], and I've been tracking them for [TIME]. Should I come to the hospital?"

Calling Emergency Contact:
"Hi, this is [YOUR NAME]. I'm in labor and heading to [HOSPITAL NAME]. Can you [SPECIFIC REQUEST - watch kids, meet us there, etc.]? We'll update you soon."

Emergency (Call 911):
"I'm [WEEKS] weeks pregnant and having a medical emergency. [DESCRIBE SITUATION]. I need an ambulance to [YOUR ADDRESS]."

---
Generated by Contracking.me - Free Contraction Timer
https://contracking.me`;

    downloadTextFile(template, "emergency-contact-templates.txt");
  };

  const generatePrintableCards = () => {
    const html = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Emergency Contact Cards</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    .card { 
      border: 2px solid #333; 
      margin: 20px 0; 
      padding: 15px; 
      page-break-inside: avoid;
      width: 3.5in;
      height: 2in;
    }
    .card h3 { margin-top: 0; text-align: center; color: #d32f2f; }
    .card p { margin: 5px 0; font-size: 12px; }
    @media print {
      body { margin: 0; }
      .card { margin: 10px; }
    }
  </style>
</head>
<body>
  <div class="card">
    <h3>ðŸš¨ MEDICAL EMERGENCY ðŸš¨</h3>
    <p><strong>Name:</strong> _____________________</p>
    <p><strong>Due Date:</strong> __________________</p>
    <p><strong>Blood Type:</strong> _________________</p>
    <p><strong>Allergies:</strong> ____________________</p>
    <p><strong>Medical Conditions:</strong> ____________</p>
    <p><strong>Healthcare Provider:</strong> ___________</p>
    <p><strong>Emergency Contact:</strong> ____________</p>
    <p><strong>Hospital:</strong> ____________________</p>
  </div>
  
  <div class="card">
    <h3>ðŸ“ž LABOR PROGRESS</h3>
    <p><strong>Labor Started:</strong> ________________</p>
    <p><strong>Water Broke:</strong> _________________</p>
    <p><strong>Contraction Pattern:</strong> ____________</p>
    <p><strong>Duration:</strong> ____________________</p>
    <p><strong>Frequency:</strong> __________________</p>
    <p><strong>Intensity (1-10):</strong> _______________</p>
    <p><strong>Other Symptoms:</strong> ______________</p>
  </div>
</body>
</html>`;

    const blob = new Blob([html], { type: "text/html;charset=utf-8" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = "emergency-contact-cards.html";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  return {
    generateEmergencyContactTemplate,
    generatePrintableCards,
  };
}

interface DownloadTemplatesButtonsProps {
  className?: string;
  size?: "sm" | "lg" | "default";
  variant?: "default" | "outline";
}

export function DownloadTemplatesHeaderButtons({
  className,
}: DownloadTemplatesButtonsProps) {
  const { generateEmergencyContactTemplate, generatePrintableCards } =
    DownloadTemplatesButtons();

  return (
    <div className={`flex gap-4 mb-6 ${className}`}>
      <Button onClick={generateEmergencyContactTemplate}>
        <Download className="w-4 h-4 mr-2" />
        Download Templates
      </Button>
      <Button variant="outline" onClick={generatePrintableCards}>
        <Copy className="w-4 h-4 mr-2" />
        Download Cards
      </Button>
    </div>
  );
}

export function DownloadTemplatesButton({
  size = "default",
  variant = "outline",
}: DownloadTemplatesButtonsProps) {
  const { generateEmergencyContactTemplate } = DownloadTemplatesButtons();

  return (
    <Button
      variant={variant}
      size={size}
      onClick={generateEmergencyContactTemplate}
    >
      <Download className="w-4 h-4 mr-2" />
      Download All Templates
    </Button>
  );
}

export function DownloadCardButton({
  size = "sm",
  variant = "outline",
}: DownloadTemplatesButtonsProps) {
  const { generatePrintableCards } = DownloadTemplatesButtons();

  return (
    <Button variant={variant} size={size} onClick={generatePrintableCards}>
      <Download className="w-4 h-4 mr-2" />
      Download Card
    </Button>
  );
}

